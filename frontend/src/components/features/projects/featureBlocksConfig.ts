export const featureBlocksConfig = {
  frontend: {
    title: "Frontend",
    color: {
      bg: "bg-blue-100",
      border: "border-blue-300",
      text: "text-blue-800",
      icon: "bg-blue-500",
      darkBg: "dark:bg-blue-900/20",
      darkBorder: "dark:border-blue-800",
      darkText: "dark:text-blue-300",
    },
    keywords: [
      "next.js",
      "react",
      "typescript",
      "tailwind",
      "ui",
      "animation",
      "form",
      "chart",
      "framer motion",
      "storybook",
      "eslint",
      "prettier",
      "spa-роутинг",
      "url параметры",
      "zod",
      "react hook form",
      "vite",
      "redux toolkit",
      "toast уведомления",
      "модульная архитектура",
      "frontend",
      "frontend:",
      "ui library",
      "shadcn/ui",
      "state management",
      "zustand",
      "socket.io-client",
      "forms:",
      "charts:",
      "recharts",
      "animation:",
      "современный стек",
      "app router",
      "real-time messaging",
      "интерфейс чата",
      "групповые чаты",
      "веб-интерфейс",
      "адаптивный дизайн",
    ],
  },
  backend: {
    title: "Backend",
    color: {
      bg: "bg-green-100",
      border: "border-green-300",
      text: "text-green-800",
      icon: "bg-green-500",
      darkBg: "dark:bg-green-900/20",
      darkBorder: "dark:border-green-800",
      darkText: "dark:text-green-300",
    },
    keywords: [
      "nestjs",
      "prisma",
      "jwt",
      "socket",
      "redis",
      "multer",
      "s3",
      "api",
      "database",
      "postgresql",
      "backend",
      "node.js",
      "mongodb",
      "mongoose",
      "bcrypt",
      "httponly cookies",
      "xss",
      "авторизация",
      "аутентификация",
      "backend:",
      "nestjs",
      "prisma orm",
      "authentication:",
      "eve sso",
      "real-time:",
      "socket.io",
      "websocket gateway",
      "caching:",
      "file upload:",
      "aws s3",
      "socket.io",
      "real-time messaging",
      "серверная часть",
      "база данных",
      "авторизация в веб-сокете",
      "офлайн режим",
      "синхронизация",
    ],
  },
  mobile: {
    title: "Mobile",
    color: {
      bg: "bg-purple-100",
      border: "border-purple-300",
      text: "text-purple-800",
      icon: "bg-purple-500",
      darkBg: "dark:bg-purple-900/20",
      darkBorder: "dark:border-purple-800",
      darkText: "dark:text-purple-300",
    },
    keywords: [
      "react native",
      "mobile",
      "push",
      "notification",
      "navigation",
      "deep linking",
      "touch-friendly",
      "мобильная адаптация",
      "полноэкранные модальные окна",
      "bottom navigation",
      "адаптивный",
      "responsive",
      "мобильные устройства",
      "веб-приложение",
      "push-уведомлениями",
      "mobile:",
      "адаптивный дизайн",
      "desktop + mobile",
      "мобильное приложение",
      "push-уведомления",
      "мобильная версия",
      "нативные функции",
    ],
  },
  deploy: {
    title: "Deploy & Infrastructure",
    color: {
      bg: "bg-orange-100",
      border: "border-orange-300",
      text: "text-orange-800",
      icon: "bg-orange-500",
      darkBg: "dark:bg-orange-900/20",
      darkBorder: "dark:border-orange-800",
      darkText: "dark:text-orange-300",
    },
    keywords: [
      "docker",
      "kubernetes",
      "github actions",
      "prometheus",
      "grafana",
      "winston",
      "elk",
      "cloudflare",
      "ci/cd",
      "monitoring",
      "logging",
      "cdn",
      "docker compose",
      "контейнеризация",
      "инфраструктура",
      "render",
      "github pages",
      "mongodb atlas",
      "деплой",
      "облачное хранение",
      "infrastructure:",
      "ci/cd:",
      "monitoring:",
      "logging:",
      "winston + elk stack",
      "cdn:",
      "cloudflare",
      "автоматизация",
      "глобальной доставки",
      "aws",
      "интеграция",
      "eve corp manager",
      "админ-панель",
      "управления",
    ],
  },
};

export const filterFeaturesByCategory = (features: string[], keywords: string[]) => {
  return features.filter((feature) =>
    keywords.some((keyword) => feature.toLowerCase().includes(keyword.toLowerCase()))
  );
};
